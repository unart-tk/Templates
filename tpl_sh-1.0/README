Vim bash template
=================
Ben le Kin <ben@lekin.org>
v1.0,  Jun 15, 2010 
:tags: vim, templates

By running
----
vim filename.sh
----

The following template prepares a bash script.

In order to enable it for vim add this in '~/.vimrc':
----
ading templates for specific file extension
autocmd! BufNewFile * silent! 0r ~/utils/templates/vimtemplates/tpl.%:e
"autocmd bufnewfile *.ad exe "1," . 10 . "g/DATE/s//" .strftime("%d-%m-%Y")
autocmd BufNewFile * %substitute#\[:VIM_EVAL:\]\(.\{-\}\)\[:END_EVAL:\]#\=eval(submatch(1))#ge
----

.<<src, Template: tpl-1.0.sh>>
----
#!/bin/sh
# copyright (c) [:VIM_EVAL:]strftime('%Y')[:END_EVAL:] [:VIM_EVAL:]authoremail[:END_EVAL:]
# ./[:VIM_EVAL:]expand("%:t")[:END_EVAL:] --help
# 
set -u

USAGE='[-a|--all] [-f|--file <filename>] input'

input=

die(){
	echo >&2 "$@"
	exit 1
}
usage(){
	die "Usage: $0 $USAGE"
}
case "$#" in 0) usage ;; esac

file= msg=
while [ $# -gt 0 ]; do  
  case "$1" in
	-a|--all) echo "all: yes";;
	-f|--file)
		shift
		if test "$#" = "0"; then
			die "error: option -f needs an argument"
		else 
			file="$1"
		fi
	;;
	-h|--help) usage;exit 1;;
	-*|--*) help;exit 1;;
	*) break;;
  esac
  shift     
done
if [ -n "$file" ];then
	echo "file: $file"
fi
if [ -n "$msg" ];then
	echo "msg: $msg"
fi

if [ "$#" == 1 ];then
	echo "input: $1"
fi

----


[[src]]
source:
http://lekin.org/files/utils/templates/vimtemplates/tpl_sh-1.0.tar.gz[]
